{"version":3,"sources":["components/Preview/Preview.module.css","components/Editor/Editor.module.css","components/Preview/Preview.tsx","components/Editor/Editor.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Preview","props","className","s","markdownPreview","title","id","preview","dangerouslySetInnerHTML","__html","marked","text","sanitize","breaks","Editor","markdownEditor","editor","onChange","changeText","value","App","useState","editorText","setEditorText","e","currentTarget","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,gBAAkB,iCAAiC,QAAU,yBAAyB,MAAQ,yB,gBCAhHD,EAAOC,QAAU,CAAC,eAAiB,+BAA+B,OAAS,uBAAuB,MAAQ,wB,mLCOnG,SAASC,EAAQC,GAMrB,OACG,sBAAKC,UAAWC,IAAEC,gBAAlB,UACG,qBAAKF,UAAWC,IAAEE,MAAlB,8BACA,qBAAKC,GAAG,UAAUJ,UAAWC,IAAEI,QAASC,wBANpC,CAAEC,OADOC,IAAOT,EAAMU,KAAM,CAACC,UAAU,EAAMC,QAAQ,U,oBCF3D,SAASC,EAAOb,GAEpB,OACG,sBAAKC,UAAWC,IAAEY,eAAlB,UACG,qBAAKb,UAAWC,IAAEE,MAAlB,6BACA,0BAAUC,GAAG,SACHJ,UAAWC,IAAEa,OACbC,SAAUhB,EAAMiB,WAChBC,MAAOlB,EAAMU,UC+CjBS,MA1Df,WACG,IADY,EA8CwBC,mBA7CrB,smCADH,mBA8CLC,EA9CK,KA8COC,EA9CP,KAkDZ,OACG,sBAAKrB,UAAU,MAAf,UACG,cAACY,EAAD,CAAQI,WAJW,SAACM,GAAD,OAAyCD,EAAcC,EAAEC,cAAcN,QAIpDR,KAAMW,IAC5C,cAACtB,EAAD,CAASW,KAAMW,QC5CTI,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bad03538.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"markdownPreview\":\"Preview_markdownPreview__28w-O\",\"preview\":\"Preview_preview__1B3xD\",\"title\":\"Preview_title__unOsw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"markdownEditor\":\"Editor_markdownEditor__3qM7R\",\"editor\":\"Editor_editor__2aEyo\",\"title\":\"Editor_title__3QYWH\"};","import React from 'react';\nimport s from './Preview.module.css';\nimport marked from 'marked';\n\ntype propsType = {\n   text: string\n}\n\nexport function Preview(props: propsType) {\n   const getMarkdownText = () => {\n      let rawMarkup = marked(props.text, {sanitize: true, breaks: true});\n      return { __html: rawMarkup};\n   }\n\n   return (\n      <div className={s.markdownPreview}>\n         <div className={s.title}>Markdown Preview</div>\n         <div id='preview' className={s.preview} dangerouslySetInnerHTML={getMarkdownText()}/>\n      </div>\n   );\n}","import React, {ChangeEvent} from 'react';\nimport s from './Editor.module.css';\n\ntype EditorPropsType = {\n   changeText: (e: ChangeEvent<HTMLTextAreaElement>) => void\n   text: string\n}\n\nexport function Editor(props: EditorPropsType) {\n\n   return (\n      <div className={s.markdownEditor}>\n         <div className={s.title}>Markdown Editor</div>\n         <textarea id='editor'\n                   className={s.editor}\n                   onChange={props.changeText}\n                   value={props.text}/>\n      </div>\n   );\n}","import React, {ChangeEvent, useState} from 'react';\nimport './App.css';\nimport {Preview} from './components/Preview/Preview';\nimport {Editor} from './components/Editor/Editor';\n\nfunction App() {\n   let defaultText = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`;\n\n   const [editorText, setEditorText] = useState<string>(defaultText);\n\n   const changeEditorText = (e: ChangeEvent<HTMLTextAreaElement>) => setEditorText(e.currentTarget.value);\n\n   return (\n      <div className=\"App\">\n         <Editor changeText={changeEditorText} text={editorText}/>\n         <Preview text={editorText} />\n      </div>\n   );\n}\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}